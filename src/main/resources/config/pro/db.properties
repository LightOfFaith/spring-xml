##https://github.com/alibaba/druid/wiki/DruidDataSource%E9%85%8D%E7%BD%AE%E5%B1%9E%E6%80%A7%E5%88%97%E8%A1%A8
jdbc.driverClassName=com.mysql.jdbc.Driver
jdbc.url=jdbc:mysql://localhost:3306/test?useUnicode=true&characterEncoding=utf8&serverTimezone=UTC
jdbc.username=root
jdbc.password=MiQR3wGqhGgqjHwqpHtEZ++DFFPIblmHFmRayo5rxDfNshFoSJlsYUkEP2rj33qc9bfqQeVAC+lqMzZEDfx1PA==
publickey=MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAJ04fQdCGox85eg5U3vcdCM2BBD9XdLfSk94KT1/gYWd2heJu8zN5zta0LZRXizKUOYMWFTT06Rl0vCVC2E5kqUCAwEAAQ==
##初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时
jdbc.initialSize=5
##最大连接池数量
jdbc.maxActive=20
##最小连接池数量
jdbc.minIdle=10
##获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁。
jdbc.maxWait=60000
##是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
jdbc.poolPreparedStatements=false

##要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
jdbc.maxPoolPreparedStatementPerConnectionSize=-1
##用来检测连接是否有效的sql，要求是一个查询语句，常用select 'x'。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会起作用。
jdbc.validationQuery=select 'x'
##单位：秒，检测连接是否有效的超时时间。底层调用jdbc Statement对象的void setQueryTimeout(int seconds)方法
jdbc.validationQueryTimeout=
##申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
jdbc.testOnBorrow=false
##归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
jdbc.testOnReturn=false
##建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
jdbc.testWhileIdle=true
##归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
jdbc.keepAlive=
##有两个含义：
##1) Destroy线程会检测连接的间隔时间，如果连接空闲时间大于等于minEvictableIdleTimeMillis则关闭物理连接。
##2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明
jdbc.timeBetweenEvictionRunsMillis=60000
##不再使用，一个DruidDataSource只支持一个EvictionRun
jdbc.numTestsPerEvictionRun=
##连接保持空闲而不被驱逐的最小时间
jdbc.minEvictableIdleTimeMillis=600000
##连接保持空闲而不被驱逐的最大时间
jdbc.maxEvictableIdleTimeMillis=900000
##物理连接初始化的时候执行的sql
jdbc.connectionInitSqls
##当数据库抛出一些不可恢复的异常时，抛弃连接
jdbc.exceptionSorter=
##属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有：
##监控统计用的filter:stat
##日志用的filter:log4j
##防御sql注入的filter:wall
jdbc.filters=stat,log4j,wall,config
##类型是List<com.alibaba.druid.filter.Filter>，如果同时配置了filters和proxyFilters，是组合关系，并非替换关系
jdbc.proxyFilters=