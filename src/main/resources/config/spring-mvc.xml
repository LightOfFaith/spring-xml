<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">

	<!-- https://docs.spring.io/spring/docs/current/spring-framework-reference/web.html#spring-web -->

	<aop:aspectj-autoproxy proxy-target-class="false" />

	<bean class="com.share.lifetime.aop.aspect.LogAspect" />

	<!-- https://docs.spring.io/spring/docs/current/spring-framework-reference/web.html#mvc-view-jsp 
		配置JSP和JSTL视图解析器 -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<!-- 强烈建议将JSP文件放在目录下的'WEB-INF' 目录中，以便客户端无法直接访问。 -->
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
		<property name="order" value="1" />
		<property name="viewNames" value="*jsp" />
	</bean>

	<!-- https://docs.spring.io/spring/docs/4.3.19.RELEASE/spring-framework-reference/htmlsingle/#view -->
	<!-- 在spring-4.3框架中,不建议使用Velocity，推荐使用FreeMarker或Thymeleaf -->
	<!-- velocity配置 -->
	<bean
		class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
		<property name="resourceLoaderPath"
			value="/WEB-INF/velocity/"></property>
	</bean>
	<!-- velocity视图解析器 -->
	<bean
		class="org.springframework.web.servlet.view.velocity.VelocityViewResolver">
		<property name="cache" value="true" />
		<property name="prefix" value="" />
		<property name="suffix" value=".vm" />
		<property name="order" value="2" />
	</bean>

	<!-- freemarker 配置 -->
	<bean id="freeMarkerConfigurer"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="templateLoaderPath"
			value="/WEB-INF/freemarker/" />
	</bean>

	<!-- freemarker视图解析器 -->
	<bean
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		<property name="cache" value="true"></property>
		<property name="prefix" value="" />
		<property name="suffix" value=".ftl" />
		<property name="order" value="3" />
	</bean>

	<!-- https://www.thymeleaf.org/doc/tutorials/3.0/thymeleafspring.html -->
	<!-- thymeleaf视图解析器 -->
	<bean
		class="org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver">
		<property name="prefix" value="/WEB-INF/templates/" />
		<property name="suffix" value=".html" />
		<property name="templateMode" value="HTML" />
		<property name="cacheable" value="true" />
		<property name="order" value="4" />
	</bean>



	<!-- 配置文件上传 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">

		<!-- 设置允许上传文件最大字节(bytes) 1MB -->
		<property name="maxUploadSize" value="1048576" />
	</bean>

	<bean id="loggerInterceptor"
		class="com.share.lifetime.interceptor.LoggerInterceptor">
		<property name="showLog" value="true"></property>
	</bean>

	<bean id="performanceMonitorInterceptor"
		class="com.share.lifetime.interceptor.PerformanceMonitorInterceptor">
		<property name="useDynamicLogger" value="false" />
	</bean>

	<bean id="validator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<property name="providerClass"
			value="org.hibernate.validator.HibernateValidator" />
	</bean>
	<bean
		class="org.springframework.validation.beanvalidation.MethodValidationPostProcessor" />

	<context:component-scan
		base-package="com.share.lifetime.controller" />

	<!-- 配置静态资源 -->
	<!-- https://docs.spring.io/spring/docs/current/spring-framework-reference/web.html#mvc-multipart 
		将响应上的Cache-Control标头设置为max-age = 31536000(秒)，这会导致浏览器使用该文件的缓存版本一年 -->
	<mvc:resources mapping="/static/js/**" location="/js/"
		cache-period="31536000" />
	<mvc:resources mapping="/static/css/**" location="/css/" />
	<mvc:resources mapping="/static/lib/**" location="/lib/" />
	<mvc:resources mapping="/static/image/**"
		location="/image/" />
	<mvc:resources location="classpath:/META-INF/resources/"
		mapping="swagger-ui.html" />
	<mvc:resources
		location="classpath:/META-INF/resources/webjars/"
		mapping="/webjars/**" />

	<mvc:annotation-driven validator="validator">
		<mvc:message-converters>
			<bean
				class="org.springframework.http.converter.StringHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>text/html;charset=UTF-8</value>
						<value>application/json;charset=UTF-8</value>
					</list>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>

	<!-- https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Access_control_CORS 
		https://docs.spring.io/spring/docs/current/spring-framework-reference/web.html#mvc-cors 
		当一个资源从与该资源本身所在的服务器不同的域或端口请求一个资源时，资源会发起一个跨域 HTTP 请求。 -->
	<mvc:cors>
		<!-- allow-credentials -->
		<mvc:mapping path="/*" allow-credentials="true"
			allowed-headers="" allowed-methods="GET"
			allowed-origins="http://domain1.com,http://domain2.com"
			exposed-headers="" max-age="3600" />
	</mvc:cors>

	<!-- 拦截器 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/*" />
			<!-- 记录请求响应日志 -->
			<ref bean="loggerInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>

	<aop:config>
		<aop:pointcut
			expression="execution(* com.share.lifetime..*.*(..))" id="controller" />
		<aop:advisor advice-ref="performanceMonitorInterceptor"
			pointcut-ref="controller" />
	</aop:config>
</beans>
