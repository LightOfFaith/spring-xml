<?xml version="1.0" encoding="UTF-8"?>
<configuration>
	<property name="log.directory" value="/apps/logs/spring-xml" />
	<property name="log.context.name" value="spring-xml" />
	<property name="log.file.name" value="${log.context.name}" />
	<property name="log.info.file.name"
		value="${log.context.name}-info"></property>
	<property name="log.warn.file.name"
		value="${log.context.name}-warn"></property>
	<property name="log.error.file.name"
		value="${log.context.name}-error" />
	<property name="log.sql.file.name"
		value="${log.context.name}-sql" />
	<property name="log.charset" value="UTF-8" />
	<property name="log.maxHistory" value="30" />
	<property name="log.pattern"
		value="[%d{yyyy-MM-dd HH:mm:ss}] %-5level %class{36} %L %M - %msg%xEx%n" />
	<!-- <property name="log.pattern" value="[%d{yyyy-MM-dd HH:mm:ss}] %-5level 
		%class{36} %L %M - %msg%xEx%n" /> -->
	<!-- <property name="log.pattern" value="[%d{yyyy-MM-dd HH:mm:ss.SSS}] [%level] 
		[%thread] [%logger{50}] >>> %msg%n" /> -->
	<property name="log.async.queue.size" value="1024" />
	<property name="timestampFormat"
		value="yyyy-MM-dd HH:mm:ss.SSS" />

	<contextName>${log.context.name}</contextName>

	<appender name="STDOUT"
		class="ch.qos.logback.core.ConsoleAppender">
		<encoder charset="${log.charset}">
			<pattern>${log.pattern}</pattern>
		</encoder>
	</appender>

	<appender name="NORMALLOG-APPENDER"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${log.directory}/${log.file.name}.log</file>
		<rollingPolicy
			class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
			<fileNamePattern>${log.directory}/${log.file.name}_%i.log
			</fileNamePattern>
			<!-- keep 10G' worth of history -->
			<minIndex>1</minIndex>
			<maxIndex>10</maxIndex>
		</rollingPolicy>
		<append>true</append>
		<triggeringPolicy
			class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
			<maxFileSize>1GB</maxFileSize>
		</triggeringPolicy>
		<encoder charset="${log.charset}">
			<!-- 格式化输出：%d表示日期，%t表示线程名，%p 级别, %logger logger name最多36字节 %msg：日志消息，%n是换行符 -->
			<pattern>${log.pattern}</pattern>
			<immediateFlush>true</immediateFlush>
			<charset>UTF-8</charset>
		</encoder>
	</appender>

	<!-- 处理INFO级别的日志，并把该日志放到/apps/logs/spring-xml/spring-xml-warn.log文件中 -->
	<appender name="RollingFileInfo"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${log.directory}/${log.info.file.name}.log</file>
		<rollingPolicy
			class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
			<fileNamePattern>${log.directory}/${log.info.file.name}_%i.log
			</fileNamePattern>
			<!-- keep 10G' worth of history -->
			<minIndex>1</minIndex>
			<maxIndex>10</maxIndex>
		</rollingPolicy>
		<append>true</append>
		<triggeringPolicy
			class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
			<maxFileSize>1GB</maxFileSize>
		</triggeringPolicy>
		<encoder charset="${log.charset}">
			<!-- 格式化输出：%d表示日期，%t表示线程名，%p 级别, %logger logger name最多36字节 %msg：日志消息，%n是换行符 -->
			<pattern>${log.pattern}</pattern>
			<immediateFlush>true</immediateFlush>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>INFO</level>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
	</appender>

	<!-- 处理WARN级别的日志，并把该日志放到/apps/logs/spring-xml/spring-xml-warn.log文件中 -->
	<appender name="RollingFileWarn"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${log.directory}/${log.warn.file.name}.log</file>
		<rollingPolicy
			class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
			<fileNamePattern>${log.directory}/${log.warn.file.name}_%i.log
			</fileNamePattern>
			<!-- keep 10G' worth of history -->
			<minIndex>1</minIndex>
			<maxIndex>10</maxIndex>
		</rollingPolicy>
		<append>true</append>
		<triggeringPolicy
			class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
			<maxFileSize>1GB</maxFileSize>
		</triggeringPolicy>
		<encoder charset="${log.charset}">
			<!-- 格式化输出：%d表示日期，%t表示线程名，%p 级别, %logger logger name最多36字节 %msg：日志消息，%n是换行符 -->
			<pattern>${log.pattern}</pattern>
			<immediateFlush>true</immediateFlush>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>WARN</level>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
	</appender>

	<!--处理ERROR级别的日志，并把该日志放到/apps/logs/spring-xml/spring-xml-error.log文件中 -->
	<appender name="RollingFileError"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${log.directory}/${log.error.file.name}.log</file>
		<rollingPolicy
			class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
			<fileNamePattern>${log.directory}/${log.error.file.name}_%i.log
			</fileNamePattern>
			<!-- keep 10G' worth of history -->
			<minIndex>1</minIndex>
			<maxIndex>10</maxIndex>
		</rollingPolicy>
		<append>true</append>
		<triggeringPolicy
			class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
			<maxFileSize>1GB</maxFileSize>
		</triggeringPolicy>
		<encoder charset="${log.charset}">
			<!-- 格式化输出：%d表示日期，%t表示线程名，%p 级别, %logger logger name最多36字节 %msg：日志消息，%n是换行符 -->
			<pattern>${log.pattern}</pattern>
			<immediateFlush>true</immediateFlush>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>ERROR</level>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
	</appender>

	<!--Druid的日志记录追加器 -->
	<appender name="DruidSqlRollingFile"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${log.directory}/${log.sql.file.name}.log</file>
		<rollingPolicy
			class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
			<fileNamePattern>${log.directory}/${log.sql.file.name}_%i.log
			</fileNamePattern>
			<!-- keep 10G' worth of history -->
			<minIndex>1</minIndex>
			<maxIndex>10</maxIndex>
		</rollingPolicy>
		<append>true</append>
		<triggeringPolicy
			class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
			<maxFileSize>1GB</maxFileSize>
		</triggeringPolicy>
		<encoder charset="${log.charset}">
			<!-- 格式化输出：%d表示日期，%t表示线程名，%p 级别, %logger logger name最多36字节 %msg：日志消息，%n是换行符 -->
			<pattern>${log.pattern}</pattern>
			<immediateFlush>true</immediateFlush>
		</encoder>
	</appender>

	<appender name="JSON"
		class="ch.qos.logback.core.ConsoleAppender">
		<layout class="ch.qos.logback.contrib.json.classic.JsonLayout">
			<jsonFormatter
				class="ch.qos.logback.contrib.jackson.JacksonJsonFormatter">
				<prettyPrint>true</prettyPrint>
			</jsonFormatter>
			<timestampFormat>${timestampFormat}</timestampFormat>
		</layout>
	</appender>

	<!-- Spring -->
	<logger
		name="org.springframework.web.filter.CommonsRequestLoggingFilter"
		additivity="false">
		<level value="DEBUG" />
		<appender-ref ref="STDOUT" />
	</logger>

	<logger
		name="org.springframework.aop.interceptor.PerformanceMonitorInterceptor"
		level="TRACE" additivity="false">
		<appender-ref ref="STDOUT" />
	</logger>

	<logger name="com.share.lifetime.interceptor.LoggerInterceptor"
		level="DEBUG" additivity="false">
		<appender-ref ref="STDOUT" />
	</logger>

	<logger
		name="com.share.lifetime.interceptor.PerformanceMonitorInterceptor"
		level="TRACE" additivity="false">
		<appender-ref ref="STDOUT" />
	</logger>

	<logger name="druid.sql.DataSource" level="DEBUG"
		additivity="false">
		<appender-ref ref="DruidSqlRollingFile" />
		<appender-ref ref="NORMALLOG-APPENDER" />
		<appender-ref ref="RollingFileWarn" />
		<appender-ref ref="STDOUT" />
	</logger>

	<logger name="druid.sql.Connection" level="DEBUG"
		additivity="false">
		<appender-ref ref="DruidSqlRollingFile" />
		<appender-ref ref="NORMALLOG-APPENDER" />
		<appender-ref ref="RollingFileWarn" />
		<appender-ref ref="STDOUT" />
	</logger>
	<!--记录druid-sql的记录 -->
	<logger name="druid.sql.Statement" level="DEBUG"
		additivity="false">
		<appender-ref ref="DruidSqlRollingFile" />
		<appender-ref ref="NORMALLOG-APPENDER" />
		<appender-ref ref="RollingFileWarn" />
		<appender-ref ref="STDOUT" />
	</logger>

	<logger name="druid.sql.ResultSet" level="DEBUG"
		additivity="false">
		<appender-ref ref="DruidSqlRollingFile" />
		<appender-ref ref="NORMALLOG-APPENDER" />
		<appender-ref ref="RollingFileWarn" />
		<appender-ref ref="STDOUT" />
	</logger>

	<root level="INFO">
		<appender-ref ref="STDOUT" />
		<!-- <appender-ref ref="JSON" /> -->
		<appender-ref ref="NORMALLOG-APPENDER" />
		<appender-ref ref="RollingFileInfo" />
		<appender-ref ref="RollingFileWarn" />
		<appender-ref ref="RollingFileError" />
	</root>
</configuration>